{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AACA,6DAAoD;AACpD,2CAAoC;AACpC,iCAA2B;AAE3B,kCAAmC;AACnC,+BAAgC;AAChC,IAAM,EAAE,GAAQ,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;AAShD,IAAM,YAAY,GAA0B;IAC3C,QAAQ,EAAE,6BAA6B;IACvC,SAAS,EAAE,6BAA6B;IACxC,MAAM,EAAE,6BAA6B;CACrC,CAAA;AAID,IAAM,KAAK,GAAa;IACvB,GAAG;IACH,WAAW;IACX,OAAO;IACP,cAAc;IACd,YAAY;IACZ,aAAa;IACb,qBAAqB;IACrB,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,aAAa;IACb,YAAY;CACZ,CAAA;AAID,IAAM,MAAM,GAAe,eAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAI3C,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,UAAC,KAAe,EAAE,KAAa;IAClD,IAAI,QAAQ,GAAW,WAAS,KAAK,UAAO,CAAC;IAC7C,6BAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SAC/C,IAAI,CAAC,UAAC,aAAqB,IAAK,OAAA,oBAAS,CAAC,YAAY,EAAE,aAAa,CAAC,EAAtC,CAAsC,CAAC;SACvE,IAAI,CAAC,UAAC,aAAqB,IAAK,OAAA,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,EAA7B,CAA6B,CAAC,CAAA;AACjE,CAAC,EAAE,EAAC,WAAW,EAAE,CAAC,EAAC,CAAC;KAClB,KAAK,CAAC,UAAC,MAAW;IAClB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;AACpB,CAAC,CAAC,CAAA","sourcesContent":["import {environmentsInterface} from './environments-interface'\nimport writeChunkToFile from './write-chunk-to-file'\nimport multiShot from './multi-shot'\nimport chunk from './chunk'\n\nimport * as Promise from 'bluebird'\nimport * as fileSystem from 'fs'\nconst fs: any = Promise.promisifyAll(fileSystem)\n\n// TBA\n// compare copy master\n\n\n// screenshot master https://www.google.com/ copy https://dev.google.com/ test https://test.google.com/\n\n\nconst environments: environmentsInterface = {\n\t'master': 'https://www.serentipi.co.uk',\n\t'develop': 'https://www.serentipi.co.uk',\n\t'test': 'https://www.serentipi.co.uk'\n}\n\n// Crawl first domain get back list of paths\n\nconst paths: string[] = [\n\t'/',\n\t'/contact/',\n\t'/home',\n\t'/your-event/',\n\t'/weddings/',\n\t'/corporate/',\n\t'/private-functions/',\n\t'/our-story',\n\t'/gallery/',\n\t'/friends-venues/',\n\t'/open-days/',\n\t'/quote-me/'\n]\n\n// Chunk paths \n\nconst chunks: string[][] = chunk(paths, 6);\n\n// loop through each chunk add it to a file `chunk-{index}.json` then for each environment run screenshot:\n\nPromise.map(chunks, (chunk: string[], index: number) => {\n\tlet filename: string = `chunk-${index}.json`;\n\twriteChunkToFile(filename, JSON.stringify(chunk))\n\t\t.then((chunkFilename: string) => multiShot(environments, chunkFilename))\n\t\t.then((chunkFilename: string) => fs.unlinkAsync(chunkFilename))\n}, {concurrency: 6})\n\t.catch((errors: any) => {\n\t\tconsole.log(errors)\n\t})\n\n\n\n"]}