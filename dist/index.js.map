{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA,2CAAqC;AACrC,kCAAmC;AA+DnC,IAAI,MAAM,GAAW,6BAA6B,CAAC;AACnD,IAAI,WAAW,GAAW,QAAQ,CAAC;AAEnC,OAAO,CAAC,IAAI,CACX,oBAAU,CAAC,SAAS,GAAG,eAAe,EAAE,MAAM,EAAE,QAAQ,CAAC,EACzD,oBAAU,CAAC,SAAS,GAAG,eAAe,EAAE,MAAM,EAAE,MAAM,CAAC,CACvD;KACC,IAAI,CAAC,UAAC,QAAa;IACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACvB,CAAC,CAAC;KACD,KAAK,CAAC,UAAC,MAAW;IAClB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;AACpB,CAAC,CAAC,CAAA","sourcesContent":["import screenshot from './screenshot'\nimport * as Promise from 'bluebird'\n\n// screenshot master https://www.google.com/ copy https://dev.google.com/ test https://test.google.com/\n\n// compare copy master\n\n\n// var environments = {\n// \t'master': 'https://google.com/',\n// \t'develop': 'https://dev.google.com/',\n// \t'test': 'https://test.google.com/'\n// }\n\n// Crawl first domain get back list of paths\n\n// var paths = [\n// \t'/home',\n// \t'/about',\n// \t'/contact',\n// \t'/home',\n// \t'/about',\n// \t'/contact',\n// \t'/home',\n// \t'/about',\n// \t'/contact',\n// \t'/home',\n// \t'/about',\n// \t'/contact'\n// ];\n\n// Chunk paths `import chunk from './chunk'`\n\n// [\n// \t['/home',\n// \t'/about',\n// \t'/contact'],\n// \t['/home',\n// \t'/about',\n// \t'/contact'],\n// \t['/home',\n// \t'/about',\n// \t'/contact']\n// ]\n\n\n// loop through chunks for each environment add them to a file `chunk-{index}.json` run screenshot:\n\n\n// Promise.map(chunks, (chunk, index) => {\n// \tfs.writeAsync(`chunk-${index}`, JSON.stringify(chunk))\n// \t\t.then((chunkFilename) => {\n// \t\t\tvar promises = [];\n// \t\t\tObject.keys(environments).forEach((env) => {\n// \t\t\t\tvar domain = environments[env];\n// \t\t\t\tpromises.push(\n// \t\t\t\t\tscreenshot(chunkFilename, domain, environment)\n// \t\t\t\t)\n// \t\t\t})\n\n// \t\t\treturn Promise.join(promises)\n// \t\t})\n// }, {concurrency: 6})\n\nvar domain: string = 'https://www.serentipi.co.uk';\nvar environment: string = 'master';\n\nPromise.join(\n\tscreenshot(__dirname + '/chunk-0.json', domain, 'master'), \n\tscreenshot(__dirname + '/chunk-0.json', domain, 'test')\n)\n\t.then((response: any) => {\n\t\tconsole.log(response);\n\t})\n\t.catch((errors: any) => {\n\t\tconsole.log(errors)\n\t})\n\n\n\n"]}