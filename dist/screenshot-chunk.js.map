{"version":3,"file":"screenshot-chunk.js","sourceRoot":"","sources":["../src/screenshot-chunk.ts"],"names":[],"mappings":";;AACA,6DAAoD;AACpD,2CAAoC;AACpC,2BAA4B;AAC5B,kCAAmC;AACnC,+BAAgC;AAChC,IAAM,EAAE,GAAQ,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;AAEhD,yBAAyB,YAAmC,EAAE,KAAe,EAAE,KAAa;IAC3F,IAAI,QAAQ,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAS,KAAK,UAAO,CAAC,CAAC;IACnE,MAAM,CAAC,6BAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACnD,IAAI,CAAC,UAAC,aAAqB,IAAK,OAAA,oBAAS,CAAC,YAAY,EAAE,aAAa,CAAC,EAAtC,CAAsC,CAAC;SACvE,IAAI,CAAC,UAAC,aAAqB,IAAK,OAAA,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,EAA7B,CAA6B,CAAC,CAAA;AACpE,CAAC;AAED,kBAAe,eAAe,CAAA","sourcesContent":["import {environmentsInterface} from './environments-interface'\nimport writeChunkToFile from './write-chunk-to-file'\nimport multiShot from './multi-shot'\nimport * as path from 'path'\nimport * as Promise from 'bluebird'\nimport * as fileSystem from 'fs'\nconst fs: any = Promise.promisifyAll(fileSystem)\n\nfunction screenshotChunk(environments: environmentsInterface, chunk: string[], index: number) {\n\tlet filename: string = path.join(__dirname, `chunk-${index}.json`);\n\treturn writeChunkToFile(filename, JSON.stringify(chunk))\n\t    .then((chunkFilename: string) => multiShot(environments, chunkFilename))\n\t    .then((chunkFilename: string) => fs.unlinkAsync(chunkFilename))\n}\n\nexport default screenshotChunk"]}