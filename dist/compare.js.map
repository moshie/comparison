{"version":3,"file":"compare.js","sourceRoot":"","sources":["../src/compare.ts"],"names":[],"mappings":";;AAAA,2BAA4B;AAC5B,kCAAmC;AACnC,sCAAuC;AAEvC,iBAAiB,QAAgB,EAAE,UAAkB;IACjD,IAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAA;IAChE,IAAM,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAA;IAEpE,IAAM,IAAI,GAAG,IAAI,SAAS,CAAC;QACvB,UAAU,EAAE,QAAQ;QACpB,UAAU,EAAE,UAAU;QACtB,aAAa,EAAE,SAAS,CAAC,iBAAiB;QAC1C,SAAS,EAAE,IAAI;QACf,oBAAoB,EAAE,GAAG;QACzB,qBAAqB,EAAE,GAAG;QAC1B,mBAAmB,EAAE,GAAG;QACxB,uBAAuB,EAAE,GAAG;QAC5B,WAAW,EAAE,KAAK;QAClB,iBAAiB,EAAE,CAAC;QACpB,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAK,kBAAkB,SAAI,oBAAoB,iBAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KAClI,CAAC,CAAA;IAEF,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QAC/B,IAAI,CAAC,GAAG,CAAC,UAAC,KAAU,EAAE,MAAW;YAC7B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACR,MAAM,CAAC,KAAK,CAAC,CAAA;gBACb,MAAM,CAAC;YACX,CAAC;YACD,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QACxB,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;AACN,CAAC;AAED,kBAAe,OAAO,CAAA","sourcesContent":["import * as path from 'path'\nimport * as Promise from 'bluebird'\nimport * as BlinkDiff from 'blink-diff'\n\nfunction compare(original: string, comparison: string) {\n    const originalFolderName = path.basename(path.dirname(original))\n    const comparisonFolderName = path.basename(path.dirname(comparison))\n\n    const diff = new BlinkDiff({\n        imageAPath: original,\n        imageBPath: comparison,\n        thresholdType: BlinkDiff.THRESHOLD_PERCENT,\n        threshold: 0.01, // 1% threshold\n        outputBackgroundBlue: 255,\n        outputBackgroundGreen: 255,\n        outputBackgroundRed: 255,\n        outputBackgroundOpacity: 0.8,\n        composition: false,\n        outputMaskOpacity: 1,\n        imageOutputPath: path.join(process.cwd(), `${originalFolderName}_${comparisonFolderName}_comparisons`, path.basename(original)) // Directory needs to exist\n    })\n\n    return new Promise((resolve, reject) => {\n        diff.run((error: any, result: any) => {\n            if (error) {\n                reject(error)\n                return;\n            }\n            resolve(result.code)\n        })\n    })\n}\n\nexport default compare"]}