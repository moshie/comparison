{"version":3,"file":"check-paths-are-directories.js","sourceRoot":"","sources":["../src/check-paths-are-directories.ts"],"names":[],"mappings":";;AAAA,kCAAmC;AACnC,+BAAgC;AAChC,IAAM,EAAE,GAAQ,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;AAEhD;IAAkC,eAAkB;SAAlB,UAAkB,EAAlB,qBAAkB,EAAlB,IAAkB;QAAlB,0BAAkB;;IAChD,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QAC/B,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,UAAC,IAAY;YAC5B,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC;iBACpB,IAAI,CAAC,UAAC,IAAS,IAAK,OAAA,IAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC;iBACvC,KAAK,CAAC,UAAC,KAAU;gBACd,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC;oBACzB,MAAM,CAAC,KAAK,CAAA;gBAChB,CAAC;gBACD,MAAM,CAAC,KAAK,CAAC,CAAA;YACjB,CAAC,CAAC,CAAA;QACV,CAAC,CAAC;aACD,IAAI,CAAC,UAAC,UAAqB;YACxB,IAAI,YAAY,GAAW,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YACpD,EAAE,CAAC,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtB,MAAM,CAAI,KAAK,CAAC,YAAY,CAAC,wBAAqB,CAAC,CAAA;YACvD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,OAAO,CAAC,KAAK,CAAC,CAAA;YAClB,CAAC;QACL,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;AACN,CAAC;AAED,kBAAe,wBAAwB,CAAA","sourcesContent":["import * as Promise from 'bluebird'\nimport * as fileSystem from 'fs'\nconst fs: any = Promise.promisifyAll(fileSystem)\n\nfunction checkPathsAreDirectories(...paths: string[]): Promise<any> {\n    return new Promise((resolve, reject) => {\n        Promise.map(paths, (path: string) => {\n            return fs.statAsync(path)\n                .then((stat: any) => stat.isDirectory())\n                .catch((error: any) => {\n                    if (error.code == 'ENOENT') {\n                        return false // File / folder doesn't exist fall back to then validation\n                    }\n                    reject(error) // If an error occured we reject\n                })\n        })\n        .then((validation: boolean[]) => {\n            let failureIndex: number = validation.indexOf(false)\n            if (failureIndex !== -1) {\n                reject(`${paths[failureIndex]} is not a directory`)\n            } else {\n                resolve(paths)\n            }\n        })\n    })\n}\n\nexport default checkPathsAreDirectories"]}