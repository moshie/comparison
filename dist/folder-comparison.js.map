{"version":3,"file":"folder-comparison.js","sourceRoot":"","sources":["../src/folder-comparison.ts"],"names":[],"mappings":";;AAAA,2BAA4B;AAC5B,kCAAmC;AACnC,+BAAgC;AAChC,IAAM,EAAE,GAAQ,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;AAEhD,qCAA+B;AAE/B,0BAA0B,QAAgB,EAAE,UAAkB;IAC1D,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,UAAC,QAAgB;QAC3D,IAAI,gBAAgB,GAAW,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;QAC/D,IAAI,kBAAkB,GAAW,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;QACnE,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,gBAAgB,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC;aACzE,IAAI,CAAC,cAAM,OAAA,EAAE,CAAC,WAAW,CAAC,kBAAkB,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAzE,CAAyE,CAAC;aACrF,IAAI,CAAC,cAAM,OAAA,iBAAO,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,EAA7C,CAA6C,CAAC,CAAA;IAClE,CAAC,EAAE,EAAC,WAAW,EAAE,CAAC,EAAC,CAAC,CAAA;AACxB,CAAC;AAED,kBAAe,gBAAgB,CAAA","sourcesContent":["import * as path from 'path'\nimport * as Promise from 'bluebird'\nimport * as fileSystem from 'fs'\nconst fs: any = Promise.promisifyAll(fileSystem)\n\nimport compare from './compare'\n\nfunction folderComparison(original: string, comparison: string) {\n    return Promise.map(fs.readdirAsync(original), (filename: string) => {\n        let originalResolved: string = path.resolve(original, filename)\n        let comparisonResolved: string = path.resolve(comparison, filename)\n        return fs.accessAsync(originalResolved, fs.constants.F_OK | fs.constants.R_OK) // Check file exists in first comparison\n            .then(() => fs.accessAsync(comparisonResolved, fs.constants.F_OK | fs.constants.R_OK)) // Check file exists in second comparison\n            .then(() => compare(originalResolved, comparisonResolved))\n    }, {concurrency: 6})\n}\n\nexport default folderComparison"]}