{"version":3,"file":"crawl.js","sourceRoot":"","sources":["../src/crawl.ts"],"names":[],"mappings":"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","sourcesContent":["import * as URL from 'url'\nimport * as Promise from 'bluebird'\nimport * as Spider from 'node-spider'\nimport {environmentsInterface} from './environments-interface'\nimport Document from 'node-spider/lib/document'\n\nimport checkShorthandUrl from './check-shorthand-url'\n\nconst paths: string[] = []\n\nconst visited: string[] = []\n\nfunction removeWWW(hostname: string): string {\n    return hostname.indexOf('www.') == 0 ? hostname.slice(4) : hostname;\n}\n\nfunction validProtocal(href: string) {\n    let matches: string[]|null = href.match(/^(?:[a-z]+(?=\\:))/)\n    if (matches !== null && !/^(https?)/.test(matches[0])) {\n        return false;\n    }\n    return true;\n}\n\nfunction removeHash(href: string): string {\n    var parsedUrl: URL.Url = URL.parse(href)\n    parsedUrl.hash = undefined\n    return URL.format(parsedUrl)\n}\n\nfunction isUrlAbsolute(domain: URL.Url, href: string): boolean {\n    var absolute = new RegExp('^((https?:\\/\\/)?(www\\.)?(' + removeWWW(domain.host) + domain.pathname + '))')\n    return absolute.test(href)\n}\n\nfunction mergePathname(domain: URL.Url, href: string): string {\n    return URL.format(domain) + href.replace(/^(\\/)/, '')\n}\n\nconst checked: string[] = []\n\nfunction handleRequest(spider: Spider, doc: Document, domain: URL.Url) {\n\n    doc.$('a[href]').each(function (i: number, elem: any) {\n\n        let href: string = doc.$(this).attr('href')\n\n        href = removeHash(href)\n\n        if (!validProtocal(href) || checked.indexOf(href) !== -1) {\n            return true\n        }\n\n        checked.push(href)\n\n        if (isUrlAbsolute(domain, href)) {\n            // Absolute\n            var url = checkShorthandUrl(href)\n            href = url.pathname\n            href = href.replace(/^(\\/)/, '')\n            var next: string = URL.format(url)\n        } else {\n            if (/^(https?\\:\\/\\/)/.test(href)) {\n                return true;\n            }\n            // Relative\n            href = href.replace(/^(\\/)/, '')\n            var next: string = mergePathname(domain, href)\n        }\n\n        if (paths.indexOf(href) !== -1) {\n            return true\n        }\n\n        paths.push(href)\n\n        spider.queue(next, (doc: Document) => handleRequest(spider, doc, domain))\n        \n    })\n}\n\n\nfunction crawl(environments: environmentsInterface): Promise<any> {\n    const url: string = environments[Object.keys(environments)[0]]\n    const domain: URL.Url = URL.parse(url)\n\n    return new Promise((resolve, reject) => {\n        \n        const spider: Spider = new Spider({\n            concurrent: 5,\n            error: (error: any, url: string) => reject(error),\n            done: () => resolve(paths),\n            headers: { \n                'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36' \n            },\n        })\n\n        spider.queue(URL.format(domain), (doc: Document) => handleRequest(spider, doc, domain))\n    })\n\n}\n\nexport default crawl"]}