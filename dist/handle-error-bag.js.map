{"version":3,"file":"handle-error-bag.js","sourceRoot":"","sources":["../src/handle-error-bag.ts"],"names":[],"mappings":";;AAEA,wBAAwB,GAAoB;IAApB,oBAAA,EAAA,QAAoB;IACxC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QACvC,IAAI,MAAM,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,WAAW,GAAG,EAAE,GAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,OAAI,CAAA;QAC7E,OAAO,CAAC,GAAG,CAAC,KAAG,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,OAAS,CAAC,CAAA;IAC7C,CAAC;IAED,MAAM,CAAC,GAAG,CAAA;AACd,CAAC;AAED,kBAAe,cAAc,CAAA","sourcesContent":["import {errorBag} from './error-bag-interface'\n\nfunction handleErrorBag(bag: errorBag[] = []): errorBag[] {\n    for (let i = bag.length - 1; i >= 0; i--) {\n        let prefix = typeof bag[i].prefix === 'undefined' ? '' : `${bag[i].prefix}: `\n        console.log(`${prefix}${bag[i].message}`) //TODO: Replace with a logger\n    }\n\n    return bag\n}\n\nexport default handleErrorBag"]}