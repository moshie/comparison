{"version":3,"file":"sanitize-environments.js","sourceRoot":"","sources":["../src/sanitize-environments.ts"],"names":[],"mappings":";;AACA,6DAAqD;AACrD,yBAA0B;AAE1B,8BAA8B,OAAiB;IAC3C,IAAI,YAAY,GAA0B,EAAE,CAAA;IAE5C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QAC3C,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACjC,IAAI,GAAG,GAAY,6BAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;QAC9C,IAAI,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;QAC/B,IAAI,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAC,KAAK,GAAG,GAAG,SAAS,GAAM,SAAS,MAAG,CAAA;QAC9E,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;IACjC,CAAC;IAED,MAAM,CAAC,YAAY,CAAA;AACvB,CAAC;AAED,kBAAe,oBAAoB,CAAA","sourcesContent":["import {environmentsInterface} from './environments-interface'\nimport checkShorthandUrl from './check-shorthand-url'\nimport * as URL from 'url'\n\nfunction sanitizeEnvironments(domains: string[]): environmentsInterface {\n    let environments: environmentsInterface = {}\n\n    for (let i = domains.length - 1; i >= 0; i--) {\n        let split = domains[i].split('=')\n        let url: URL.Url = checkShorthandUrl(split[1])\n        var urlString = URL.format(url)\n        let base = urlString[urlString.length-1] === '/' ? urlString : `${urlString}/`\n        environments[split[0]] = base\n    }\n\n    return environments\n}\n\nexport default sanitizeEnvironments"]}